@model Tounaent_Fixtures.Models.PlayerViewModel

@{
    ViewData["Title"] = "Player Registration";
    ViewData["HideNavigation"] = true;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    @if (ViewData["Logo2"] != null)
    {
        <img src="@ViewData["Logo1"]" alt="Logo1" style="width: 100px; height: 100px; object-fit: contain;" />
    }
    else
    {
        <div style="width: 100px;"></div>
    }

    <div class="text-center flex-fill">
        <h2>@ViewData["TournamentName"]</h2>
        <h4>@ViewData["Organization"]</h4>
        <h5>@ViewData["Venue"]</h5>
        <h6>@ViewData["Date"]</h6>
    </div>

    @if (ViewData["Logo2"] != null)
    {
        <img src="@ViewData["Logo2"]" alt="Logo2" style="width: 100px; height: 100px; object-fit: contain;" />
    }
    else
    {
        <div style="width: 100px;"></div>
    }
</div>



@if (TempData["Success"] != null)
{
    <script>
        window.addEventListener("DOMContentLoaded", function () {
            const toast = document.createElement("div");
            toast.className = "toast align-items-center text-bg-success border-0 position-fixed bottom-0 end-0 m-4";
            toast.setAttribute("role", "alert");
            toast.setAttribute("aria-live", "assertive");
            toast.setAttribute("aria-atomic", "true");

            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
        @TempData["Success"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            `;

            document.body.appendChild(toast);
            const bsToast = new bootstrap.Toast(toast, { delay: 4000 });
            bsToast.show();
        });
    </script>
}




<form asp-action="Register" method="post" class="container" enctype="multipart/form-data">
    <div class="row g-3">
        <input type="hidden" asp-for="TournamentId" />

        <div class="col-md-6">
            <div class="form-group mb-3">
                <label asp-for="Name" class="form-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="FatherName" class="form-label"></label>
                <input asp-for="FatherName" class="form-control" />
            </div>
        </div>

        <!-- Right Column: Photo Upload + Preview -->
            <div class="col-md-6 d-flex align-items-center justify-content-center">
                <div class="form-group position-relative text-center" style="width: 150px; height: 150px;">
                    <!-- Upload Area -->
                    <label for="photoInput" id="uploadLabel" style="cursor: pointer; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; border: 2px dashed #ccc; border-radius: 8px;">
                        <div id="uploadIcon">
                            <i class="fas fa-upload fa-2x text-primary"></i>
                            <div style="font-size: 0.9rem;">Upload Photo</div>
                        </div>
                        <img id="photoPreview" src="#" alt="Preview"
                             style="display:none; position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; border-radius: 8px;" />
                    </label>

                    <!-- Hidden File Input -->
                    <input asp-for="PhotoFile" type="file" id="photoInput" accept="image/*" style="display:none;" />
                    <span asp-validation-for="PhotoFile" class="text-danger"></span>
                </div>
            </div>

        <!-- Gender -->
        <div class="col-md-6">
            <label class="form-label">Gender</label>
            @foreach (var gender in Model.GenderOptions.Where(g => g.Value == "1" || g.Value == "2"))
            {
                <div class="form-check form-check-inline">
                    <input class="form-check-input gender-radio" type="radio" asp-for="GenderId" value="@gender.Value" id="gender_@gender.Value" />
                    <label class="form-check-label" for="gender_@gender.Value">@gender.Text</label>
                </div>
            }
            <span asp-validation-for="GenderId" class="text-danger"></span>
        </div>

        <!-- DOB -->
        <div class="col-md-6">
            <div class="d-flex align-items-center">
                <label for="dob" class="form-label me-2 mb-0" style="min-width: 120px;">Date of Birth</label>
                <input id="dob" name="Dob" class="form-control" type="date" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
            </div>
        </div>


        <!-- Category -->
        <div class="col-md-6">
            <label class="form-label">Category</label>
            <input type="text" id="categoryName" class="form-control" readonly />
            <input type="hidden" id="CatId" name="CatId" />
        </div>

        <!-- Weight Category -->
        <div class="col-md-6">
            <label asp-for="WeightCatId" class="form-label">Weight Category</label>
            <select asp-for="WeightCatId" class="form-control" id="weightCatDropdown">
                <option value="">-- Select Weight Category --</option>
            </select>
            <span asp-validation-for="WeightCatId" class="text-danger"></span>
        </div>

        <!-- District (readonly) -->
        <div class="col-md-6">
            <label class="form-label">District</label>
            <input type="text" class="form-control" value="@Model.DistrictName" readonly />
            <input type="hidden" id="districtId" value="@Model.DistictId" />
        </div>

        <!-- Club Dropdown -->
        <div class="col-md-6">
            <label asp-for="ClubId" class="form-label">Club Name</label>
            <select asp-for="ClubId" class="form-control" id="clubDropdown">
                <option value="">-- Select Club --</option>
                @foreach (var club in Model.ClubOptions)
                {
                    <option value="@club.Value">@club.Text</option>
                }
            </select>
            <span asp-validation-for="ClubId" class="text-danger"></span>
        </div>


        <div class="col-md-6">
            <label asp-for="Address" class="form-label"></label>
            <textarea asp-for="Address" class="form-control"></textarea>
        </div>
        <div class="col-md-6">
            <label asp-for="MobileNo" class="form-label"></label>
            <input asp-for="MobileNo" class="form-control" />
        </div>

        <div class="col-md-6">
            <label asp-for="Email" class="form-label"></label>
            <input asp-for="Email" class="form-control" />
        </div>


        <div class="col-md-12 text-center">
            <button type="submit" class="btn btn-primary mt-3 px-5">Register</button>
        </div>
    </div>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        $(document).ready(function () {
            const toastEl = $('#toast-message');
            const msg = toastEl.data('message');

            if (msg) {
                const toast = $('<div class="toast align-items-center text-bg-success border-0 position-fixed bottom-0 end-0 m-4" role="alert" aria-live="assertive" aria-atomic="true">' +
                    '<div class="d-flex"><div class="toast-body">' + msg +
                    '</div><button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button></div></div>');

                $('body').append(toast);
                toast.toast({ delay: 4000 });
                toast.toast('show');
            }
        });
    </script>

    <script>
        // 📸 Photo Preview Logic
        function previewPhoto(input) {
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    $("#photoPreview").attr("src", e.target.result).show();
                    $("#uploadIcon").hide();
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        // 🎂 Calculate Age from DOB
        function calculateAge(dob) {
            const birthDate = new Date(dob);
            const today = new Date();
            let age = today.getFullYear() - birthDate.getFullYear();
            const m = today.getMonth() - birthDate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }
            return age;
        }

        // 🧠 Fetch Category + Weight Category based on gender and DOB
        function fetchCategoryAndWeight() {
            const genderId = $("input[name='GenderId']:checked").val();
            const dob = $("#dob").val();
            if (!genderId || !dob) return;

            const age = calculateAge(dob);

            $.ajax({
                url: '/PlayerRegistration/GetCategoryByGenderAndAge',
                type: 'GET',
                data: { genderId, age },
                success: function (data) {
                    if (data && data.categoryName) {
                        $("#categoryName").val(data.categoryName);
                        $("#CatId").val(data.catId);
                        fetchWeightCategories(data.catId);
                    } else {
                        $("#categoryName").val("No category found");
                        $("#CatId").val("");
                        $("#weightCatDropdown").empty().append('<option value="">-- Select Weight Category --</option>');
                    }
                },
                error: function (xhr) {
                    console.error("❌ Category fetch error:", xhr.responseText);
                    alert("❌ Failed to load category.");
                }
            });
        }

        // 🏋️ Fetch Weight Categories for given Category
        function fetchWeightCategories(catId) {
            if (!catId) return;

            $.ajax({
                url: '/PlayerRegistration/GetWeightCategoriesByCategory',
                type: 'GET',
                data: { catId },
                success: function (weights) {
                    const dropdown = $("#weightCatDropdown");
                    dropdown.empty().append('<option value="">-- Select Weight Category --</option>');
                    $.each(weights, function (i, item) {
                        dropdown.append(`<option value="${item.value}">${item.text}</option>`);
                    });
                },
                error: function (xhr) {
                    console.error("❌ Weight category error:", xhr.responseText);
                    alert("❌ Failed to load weight categories.");
                }
            });
        }

        // 🏫 Fetch Clubs by District on load
        function fetchClubsByDistrict() {
            const districtId = $("#districtId").val();
            if (!districtId) return;

            $.ajax({
                url: '/PlayerRegistration/GetClubsByDistrict',
                type: 'GET',
                data: { districtId },
                success: function (clubs) {
                    const dropdown = $("#clubDropdown");
                    dropdown.empty().append('<option value="">-- Select Club --</option>');
                    $.each(clubs, function (i, club) {
                        dropdown.append(`<option value="${club.value}">${club.text}</option>`);
                    });
                },
                error: function (xhr) {
                    console.error("❌ Club fetch error:", xhr.responseText);
                    alert("❌ Failed to load clubs.");
                }
            });
        }

        // 🚀 Document Ready Hook
        $(document).ready(function () {
            // Bind photo input change
            $("#photoInput").on("change", function () {
                previewPhoto(this);
            });

            // Bind gender and dob
            $(".gender-radio").on("change", fetchCategoryAndWeight);
            $("#dob").on("change", fetchCategoryAndWeight);

            // Fetch clubs once on page load
            fetchClubsByDistrict();
        });
    </script>

}
